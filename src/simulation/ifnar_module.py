# This file was generated by generate_ifnar_module.py
# It was generated from ifnar_equations.csv
# 
import numpy as np
def change_equations(t, states, pars, inputs):

	# Unpack states
	ifnar_in = states[0]
	ifnar = states[1]
	isgf3_in = states[2]
	isgf3 = states[3]

	# Unpack pars
	p_act_ifnar_in = pars['p_act_ifnar_in']
	p_act_isgf3_in = pars['p_act_isgf3_in']
	p_coop_ifnar = pars['p_coop_ifnar']
	p_deact_ifnar = pars['p_deact_ifnar']
	p_deact_isgf3 = pars['p_deact_isgf3']
	p_tau_ifnb = pars['p_tau_ifnb']
	pdec_ifnar = pars['pdec_ifnar']
	pdec_ifnar_in = pars['pdec_ifnar_in']
	pdec_isgf3 = pars['pdec_isgf3']
	pdec_isgf3_in = pars['pdec_isgf3_in']
	psyn_ifnar = pars['psyn_ifnar']
	psyn_ifnar_in = pars['psyn_ifnar_in']
	psyn_isgf3 = pars['psyn_isgf3']
	psyn_isgf3_in = pars['psyn_isgf3_in']

	# Unpack inputs
	ifnb = inputs['ifnb']

	# Calculate derivatives
	difnar_in = psyn_ifnar_in-pdec_ifnar_in*ifnar_in-p_act_ifnar_in*ifnar_in-(ifnar_in**p_coop_ifnar*ifnb*np.exp(-t/p_tau_ifnb))+p_deact_ifnar * ifnar
	difnar = psyn_ifnar-pdec_ifnar*ifnar+p_act_ifnar_in*ifnar_in+(ifnar_in**p_coop_ifnar*ifnb*np.exp(-t/p_tau_ifnb))-p_deact_ifnar * ifnar
	disgf3_in = psyn_isgf3_in-pdec_isgf3_in*isgf3_in-p_act_isgf3_in*isgf3_in*ifnar+p_deact_isgf3 * isgf3
	disgf3 = psyn_isgf3-pdec_isgf3*isgf3+p_act_isgf3_in*isgf3_in*ifnar-p_deact_isgf3 * isgf3
	return [difnar_in, difnar, disgf3_in, disgf3]
